c
ENV["BASE"]+"#{params[:name]}"
c
json.first["Name"]
json.first["name"]
jsonjson.first["name"]
json = JSON.parse(response.body)
c
json = JSON.parse(response.body)
c
cc
c
 get('/api/v1/schacon/repos', params: { name: 'schacon' })
user=User.create(Name:'schacon')
c
 WebMock.stub_request(:get, "https://api.github.com/users/schacon/repos").
exit
c
subject
 to_return(status: 200, body: first_stub_result, headers: {})
        }
        'User-Agent': 'Ruby'
        'Accept-Encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
        'Accept': '*/*',
        headers: {
with(
        }
        'User-Agent': 'Ruby'
        'Accept-Encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
        'Accept': '*/*',
        headers: {
with(
        }
        'User-Agent': 'Ruby'
        'Accept-Encoding': 'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',
        'Accept': '*/*',
        headers: {
with(
 WebMock.stub_request(:get, "https://api.github.com/users/schacon/repos")
c
JSON.parse(response).each do |repo| Repo.create( Name: repo["name"], Forknumber: repo["forks_count"], Stargazersnumber: repo["stargazers_count"], user_id: userobject[:id]) end
          user_id: userobject[:id])
          Stargazersnumber: repo["stargazers_count"],
          Forknumber: repo["forks_count"], 
          Name: repo["name"],
        Repo.create(
JSON.parse(response).each do |repo|
userobject=User.find_by(Name:JSON.parse(response).first['owner']['login'])
c
userobject=User.find_by(Name:JSON.parse(response).first['owner']['login'])
c
 userobject=User.find_by(Name:user)
 user= result.first['owner']['login']
result = JSON.parse(response)
c
 user= result.first['owner']['login']
 result = JSON.parse(response)
  user= result.first['owner']['login']
c
result.first['owner']['login']
  result = JSON.parse(response)
c
 User.find_by(Name:response[0]["owner"]["login"])
c
  a=JSON.parse(response)
c
